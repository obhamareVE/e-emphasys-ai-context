<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
      <title>Arrays</title>
      <link rel="stylesheet" type="text/css" href="../../skin/General.css">
      <link rel="stylesheet" type="text/css" href="../../skin/MSHtmlHelp.css">
      <meta name="keywords" content="3GL arrays arrays 3GL ">
      <meta name="author" content="Infor">
      <meta name="ROBOTS" content="ALL">
   </head>
   <body id="body">
      <div class="TopicTitle">Arrays</div>
      <div class="body">
         <div class="GeneralSection">
            <p class="Paragraph">You use arrays to store multiple variables of the same type
               within one data item. Each variable can be referred to with the
               construction <code class="Code">array_name(index)</code>. For example, the first
               element in a one-dimensional array is <code class="Code">array_name(1)</code>.
            </p>
            <p class="Paragraph">An array can have up to four dimensions. The dimension
               (and, in case of a string, also the length) of an array must
               be stated in the declaration.
            </p>
            <p class="Paragraph">There are three types of arrays: long, double, and
               string.
            </p>
         </div>
         <div class="GeneralSection">
            <div class="subSectionTitle">Long arrays</div>
            <p class="Paragraph">You declare one-dimensional long arrays as follows:</p><pre class="CodeBlock">
LONG lng_array(5)        | 1-dimensional array for 5 longs
</pre><p class="Paragraph">The number in parentheses after the array name specifies
               the number of longs that can be stored in the array. You
               declare two-dimensional long arrays as follows: <code class="Code">LONG lng_array(2,4)</code></p>
            <p class="Paragraph">The first number after the array name indicates the number
               of dimensions in the array. The second number indicates the
               number of longs that can be stored in each dimension. The
               following diagram illustrates a two-dimensional array as a
               matrix:
            </p>
            <table width="100" border="0" class="none">
               <tbody noTR="4" class="none">
                  <tr no="1" isLast="false" class="none">
                     <td rowspan="1" colspan="1" class="none">3</td>
                     <td rowspan="1" colspan="1" class="none">100</td>
                  </tr>
                  <tr no="2" isLast="false" class="none">
                     <td rowspan="1" colspan="1" class="none">4</td>
                     <td rowspan="1" colspan="1" class="none">98</td>
                  </tr>
                  <tr no="3" isLast="false" class="none">
                     <td rowspan="1" colspan="1" class="none">56</td>
                     <td rowspan="1" colspan="1" class="none">55</td>
                  </tr>
                  <tr no="4" isLast="true" class="none">
                     <td rowspan="1" colspan="1" class="none">78</td>
                     <td rowspan="1" colspan="1" class="none">77</td>
                  </tr>
               </tbody>
            </table>
            <p class="postspacer">&nbsp;</p><pre class="CodeBlock">
lng_array(1,1) = 3      lng_array(2,1) = 100
lng_array(1,2) = 4      lng_array(2,2) = 98
lng_array(1,3) = 56     lng_array(2,3) = 55
lng_array(1,4) = 78     lng_array(2,4) = 77
</pre></div>
         <div class="GeneralSection">
            <div class="subSectionTitle">Double arrays</div>
            <p class="Paragraph">A double array differs from a long array only in that it
               is prefixed by the keyword DOUBLE and the array elements must
               be filled with double values. You declare a double array as
               follows:
            </p><pre class="CodeBlock">
DOUBLE dbl_array(5)
</pre></div>
         <div class="GeneralSection">
            <div class="subSectionTitle">String arrays</div>
            <p class="Paragraph">The declaration of string arrays differs from that for
               other array type in that the first dimension contains the
               length of the strings to be stored in the array. For
               example:
            </p><pre class="CodeBlock">
STRING str_arr(10,5)        | 5 strings of length 10
STRING str_arr(10,5,5,5)    | A 5 x 5 x 5 matrix of strings of length 10
</pre><p class="Paragraph">When referencing a string array, the first dimension
               indicates the start position in the string. The particular
               string to be accessed is indicated by the other dimensions.
               It is possible to specify a length for the string to be
               retrieved by using a semicolon [;] followed by the required
               length. If you omit the length, the total length of the
               string is taken.
            </p>
            <div class="subExampleSection">
               <div class="subSectionTitle">Example two-dimensional string array</div>
               <table width="100%" border="0" class="none">
                  <tbody noTR="4" class="none">
                     <tr no="1" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">STRING str_arr(6,2)</code></td>
                        <td rowspan="1" colspan="1" class="none">Space reserved for 2 strings of 6 characters each.
                           For example, the first string contains "abcdef" and the
                           second "ABCDEF".
                        </td>
                     </tr>
                     <tr no="2" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">str_arr(1,1) = "abcdef"</code></td>
                        <td rowspan="1" colspan="1" class="none">This references the first string starting at
                           position 1.
                        </td>
                     </tr>
                     <tr no="3" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">str_arr(2,1;1) = "b"</code></td>
                        <td rowspan="1" colspan="1" class="none">This references the first string starting at
                           position 2 with length 1.
                        </td>
                     </tr>
                     <tr no="4" isLast="true" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">str_arr(3,2) = "CDEF"</code></td>
                        <td rowspan="1" colspan="1" class="none">This references the second string beginning at
                           position 3.
                        </td>
                     </tr>
                  </tbody>
               </table>
               <p class="postspacer">&nbsp;</p>
            </div>
            <div class="subExampleSection">
               <div class="subSectionTitle">Example filling string variables</div>
               <p class="Paragraph">Consider a string declared as <code class="Code">STRING strg(26)</code>. The statements listed below
                  will have the indicated results:
               </p>
               <table width="100%" border="0" class="none">
                  <tbody noTR="4" class="none">
                     <tr no="1" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">strg = "good morning"</code></td>
                        <td rowspan="1" colspan="1" class="none">
                           <p class="Paragraph_firstAndNoTextBefore">The words "good morning" are stored from the first
                              position of strg:
                           </p>
                           <p class="Paragraph">"good morning"</p>
                        </td>
                     </tr>
                     <tr no="2" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">strg(1) = "good morning"</code></td>
                        <td rowspan="1" colspan="1" class="none">
                           <p class="Paragraph_firstAndNoTextBefore">The same result but filled with spaces:</p>
                           <p class="Paragraph">"good morning &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"</p>
                        </td>
                     </tr>
                     <tr no="3" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">strg(9) = "good morning"</code></td>
                        <td rowspan="1" colspan="1" class="none">
                           <p class="Paragraph_firstAndNoTextBefore">The string is stored from position 9 onwards and
                              filled with spaces:
                           </p>
                           <p class="Paragraph">"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;good morning&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"</p>
                        </td>
                     </tr>
                     <tr no="4" isLast="true" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">strg(2;3) = "Hello"</code></td>
                        <td rowspan="1" colspan="1" class="none">
                           <p class="Paragraph_firstAndNoTextBefore">The letters "Hel" (3 characters) are stored from
                              position 2 onwards:
                           </p>
                           <p class="Paragraph">"&nbsp;Hel&nbsp;&nbsp;&nbsp;&nbsp;good morning&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"</p>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <p class="postspacer">&nbsp;</p>
            </div>
            <div class="subExampleSection">
               <div class="subSectionTitle">Example accessing string variables</div>
               <p class="Paragraph">Suppose the string declared in the previous example has
                  the value "ABCDEFGHIJKLMNOPQRSTUVWXYZ". The results of the
                  statements below will be as indicated:
               </p><pre class="CodeBlock">
print strg          "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
print strg(13)      "MNOPQRSTUVWXYZ"
print strg(2;3)     "BCD"
</pre><p class="Paragraph">In these examples, strg( <i class="Emphasis">n</i>) refers to the entire array
                  from position <i class="Emphasis">n</i> onwards and strg( <i class="Emphasis">n;x</i>) refers to <i class="Emphasis">x</i> positions starting at position <i class="Emphasis">n</i>.
               </p>
            </div>
            <div class="subExampleSection">
               <div class="subSectionTitle">Example two-dimensional string array</div>
               <p class="Paragraph">Consider a 2-dimensional string array declared as: <code class="Code">STRING twice(6,2)</code>. The statements below will have
                  the indicated results.
               </p>
               <table border="0" class="none">
                  <tbody noTR="4" class="none">
                     <tr no="1" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">twice(1,1) = "ABCDEF"</code></td>
                        <td rowspan="1" colspan="1" class="none">The first string is filled from position 1
                           onwards.
                        </td>
                     </tr>
                     <tr no="2" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">twice(1,2) = "123456"</code></td>
                        <td rowspan="1" colspan="1" class="none">The second string is filled from position 1
                           onwards.
                        </td>
                     </tr>
                     <tr no="3" isLast="false" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">print twice(3,1)</code></td>
                        <td rowspan="1" colspan="1" class="none">"CDEF" is printed.</td>
                     </tr>
                     <tr no="4" isLast="true" class="none">
                        <td rowspan="1" colspan="1" class="none"><code class="Code">print twice(4,1;2)</code></td>
                        <td rowspan="1" colspan="1" class="none">Two characters are printed starting at position
                           4 in string 1 - that is, "DE" is printed.
                        </td>
                     </tr>
                  </tbody>
               </table>
               <p class="postspacer">&nbsp;</p>
            </div>
         </div>
         <div class="GeneralSection">
            <div class="subSectionTitle">String lengths</div>
            <p class="Paragraph">There are two lengths associated with a string: the
               maximum and the current length. The maximum length is defined
               at declaration of the string and the current length can vary,
               depending on the contents of the string.
            </p>
            <p class="Paragraph">If a string is declared as STRING strg(100), the maximum
               length of strg is 100. If strg is filled as strg = "hello",
               the current length is 5. If strg is filled as strg(1) =
               "hello", the current length is also is 100, as the remaining
               positions are filled with spaces. When you specify a start
               position, the string is always filled out with spaces.
            </p>
            <p class="Paragraph">If a string is declared as FIXED, the current length is
               always equal to the maximum length, because the string is
               always filled up with spaces. Also, in the case of
               multi-dimensional strings, the current length is always equal
               to the maximum length.
            </p>
         </div>
         <div class="RelatedTopics">
            <p class="RelatedTopicsSectionTitle">Related topics</p>
            <ul>
               <li class="RelTopic"><a href="../../progguide/3gl_features/overview.htm" class="manualLink">3GL programming language features: overview</a></li>
               <li class="RelTopic"><a href="../../progguide/3gl_features/variables.htm" class="manualLink">Variables</a></li>
            </ul>
         </div>
         <p>&nbsp;</p>
         <table class="noborder" border="0" cellpadding="0" cellspacing="5">
            <tr>
               <td class="noborder"><img src="../../skin/mail.gif" alt="Send Us Your Feedback About this Help Page"></td>
               <td class="noborder"><a class="FeedbackLink" href="mailto:documentation@infor.com?Subject=Feedback on /progguide/3gl_features/arrays, 10.4.2, en">Send Us Your Feedback About this Help Page</a></td>
            </tr>
         </table>
      </div>
   </body>
</html>